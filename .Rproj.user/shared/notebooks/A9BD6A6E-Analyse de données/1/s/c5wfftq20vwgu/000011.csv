"0","# Nettoyage des compétences et séparation des phrases"
"0","top_skills <- base_emp_inno %>%"
"0","  filter(!is.na(top_skill_req), n_patents > 0) %>%  # Exclure NA et brevets nuls"
"0","  separate_rows(top_skill_req, sep = ""[,;/|]"") %>%  # Séparer les compétences par délimiteurs courants"
"0","  mutate("
"0","    top_skill_req = str_to_lower(top_skill_req),      # Convertir en minuscules"
"0","    top_skill_req = str_replace_all(top_skill_req, ""[[:punct:]]"", """"),  # Supprimer la ponctuation"
"0","    top_skill_req = str_squish(top_skill_req)         # Supprimer les espaces inutiles"
"0","  ) %>%"
"0","  filter("
"0","    str_count(top_skill_req, ""\\w+"") <= 3,  # Garder uniquement les phrases de 3 mots max"
"0","    !str_detect(top_skill_req, ""\\b(autonome|équipe)\\b.*\\1"")  # Exclure les répétitions"
"0","  ) %>%"
"0","  group_by(top_skill_req) %>%"
"0","  summarise(total_patents = sum(n_patents, na.rm = TRUE), .groups = ""drop"") %>%"
"0","  arrange(desc(total_patents)) %>%"
"0","  slice_head(n = 10)  # Garder les 10 compétences principales"
"0","kable(top_skills, format = ""html"", caption = ""Top 10 des compétences les plus demandées en fonction n_patents"") %>%"
"0","  kable_styling(full_width = FALSE, position = ""center"", bootstrap_options = c(""striped"", ""hover"", ""condensed"", ""responsive""))"
