"0",""
"0","base_brevets <- base_complète %>%"
"0","  group_by(app_name) %>%"
"0","  reframe("
"0","    n_patents = n(),  # Nombre total de brevets par application"
"0","    ipc_main_code = {"
"0","      ipc_counts <- table(IPC)  # Compte des occurrences des codes IPC"
"0","      max_count <- max(ipc_counts)  # Compte maximum"
"0","      main_codes <- names(ipc_counts[ipc_counts == max_count])  # Codes principaux"
"0","      paste(main_codes, collapse = "", "")  # Combinaison des codes principaux"
"0","    },"
"0","    ipc_main_desc = {"
"0","      # Vérification si `ipc_main_code` contient des données valides"
"0","      if (!is.null(ipc_main_code) && ipc_main_code != """") {"
"0","        main_codes <- strsplit(ipc_main_code, "", "")[[1]]  # Séparation des codes"
"0","        descs <- sapply(main_codes, function(code) {"
"0","          desc_row <- ipc_descriptions[ipc_descriptions$IPC == code, ""IPC_description""]"
"0","          if (length(desc_row) > 0) desc_row else NA  # Vérifie l'existence de la description"
"0","        })"
"0","        paste(descs, collapse = "", "")  # Combinaison des descriptions"
"0","      } else {"
"0","        NA  # Aucun code principal trouvé"
"0","      }"
"0","    },"
"0","    ipc_second_code = {"
"0","      ipc_counts <- table(IPC)  # Compte des occurrences des codes IPC"
"0","      sorted_ipc <- sort(ipc_counts, decreasing = TRUE)  # Tri des codes par fréquence"
"0","      if (length(sorted_ipc) > 1) {  # Vérification de l'existence d'un second code"
"0","        second_count <- sorted_ipc[2]  # Compte du deuxième code"
"0","        second_codes <- names(sorted_ipc)[sorted_ipc == second_count]  # Codes du deuxième rang"
"0","        if (length(second_codes) > 1) {"
"0","          NA  # Si plusieurs, renvoie NA"
"0","        } else {"
"0","          second_codes[1]  # Renvoie le deuxième code"
"0","        }"
"0","      } else {"
"0","        NA  # Si pas de deuxième code, renvoie NA"
"0","      }"
"0","    },"
"0","    ipc_second_desc = {"
"0","      if (!is.na(ipc_second_code) && ipc_second_code != """") {  # Vérifie si un deuxième code existe"
"0","        desc_row <- ipc_descriptions[ipc_descriptions$IPC == ipc_second_code, ""IPC_description""]"
"0","        if (length(desc_row) > 0) desc_row else NA  # Récupération de la description"
"0","      } else {"
"0","        NA  # Sinon, renvoie NA"
"0","      }"
"0","    },"
"0","    addr_city_main = {"
"0","      city_counts <- table(city)  # Compte des occurrences des villes"
"0","      if (length(city_counts) > 0) {  # Vérification de l'existence de villes"
"0","        main_city <- names(city_counts)[which.max(city_counts)]  # Ville la plus fréquente"
"0","        main_city  # Renvoie la ville principale"
"0","      } else {"
"0","        NA  # Si aucune ville, renvoie NA"
"0","      }"
"0","    },"
"0","    addr_dept_main = {"
"0","      dept_counts <- table(postal_code)  # Compte des occurrences des départements"
"0","      if (length(dept_counts) > 0) {  # Vérification de l'existence de départements"
"0","        main_dept <- names(dept_counts)[which.max(dept_counts)]  # Département le plus fréquent"
"0","        substr(main_dept, 1, 2)  # Renvoie les deux premiers caractères du code postal"
"0","      } else {"
"0","        NA  # Si aucun département, renvoie NA"
"0","      }"
"0","    }"
"0","  )"
